[{"path":[]},{"path":"https://vetiver.tidymodels.org/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://vetiver.tidymodels.org/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://vetiver.tidymodels.org/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://vetiver.tidymodels.org/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://vetiver.tidymodels.org/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://vetiver.tidymodels.org/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://vetiver.tidymodels.org/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://vetiver.tidymodels.org/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://vetiver.tidymodels.org/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://vetiver.tidymodels.org/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://vetiver.tidymodels.org/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://vetiver.tidymodels.org/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to vetiver","title":"Contributing to vetiver","text":"outlines propose change vetiver. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://vetiver.tidymodels.org/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to vetiver","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://vetiver.tidymodels.org/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to vetiver","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://vetiver.tidymodels.org/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to vetiver","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"tidymodels/vetiver\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://vetiver.tidymodels.org/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to vetiver","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://vetiver.tidymodels.org/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to vetiver","text":"Please note modelops project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://vetiver.tidymodels.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 RStudio Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://vetiver.tidymodels.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors","text":"Julia Silge. Maintainer, author. . Copyright holder, funder.","code":""},{"path":"https://vetiver.tidymodels.org/index.html","id":"vetiver-","dir":"","previous_headings":"","what":"Version, Share, Deploy, and Monitor Models","title":"Version, Share, Deploy, and Monitor Models","text":"Vetiver, oil tranquility, used stabilizing ingredient perfumery preserve volatile fragrances. goal vetiver provide fluent tooling version, share, deploy, monitor trained model. Functions handle recording checking model’s input data prototype, predicting remote API endpoint. vetiver package extensible, generics can support many kinds models.","code":""},{"path":"https://vetiver.tidymodels.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Version, Share, Deploy, and Monitor Models","text":"can install released version vetiver CRAN : development version GitHub :","code":"install.packages(\"vetiver\") # install.packages(\"devtools\") devtools::install_github(\"tidymodels/vetiver\")"},{"path":"https://vetiver.tidymodels.org/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Version, Share, Deploy, and Monitor Models","text":"vetiver_model() object collects information needed store, version, deploy trained model. can version share vetiver_model() choosing pins “board” , including local folder, RStudio Connect, Amazon S3, . can deploy pinned vetiver_model() via Plumber API, can hosted variety ways. deployed model endpoint running via one R process (either remotely server locally, perhaps via background job RStudio IDE), can make predictions deployed model new data another, separate R process.","code":"library(vetiver) cars_lm <- lm(mpg ~ ., data = mtcars) v <- vetiver_model(cars_lm, \"cars_linear\") v #>  #> ── cars_linear ─ <butchered_lm> model for deployment  #> An OLS linear regression model using 10 features library(pins) model_board <- board_temp() model_board %>% vetiver_pin_write(v) #> Creating new version '20211102T145641Z-522c5' #> Writing to pin 'cars_linear' library(plumber) pr() %>%   vetiver_pr_predict(v) %>%   pr_run(port = 8088) endpoint <- vetiver_endpoint(\"http://127.0.0.1:8088/predict\") predict(endpoint, mtcars[4:7, -1]) #> # A tibble: 4 x 1 #>   .pred #>   <dbl> #> 1  21.2 #> 2  17.7 #> 3  20.4 #> 4  14.4"},{"path":"https://vetiver.tidymodels.org/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Version, Share, Deploy, and Monitor Models","text":"project released Contributor Code Conduct. contributing project, agree abide terms. questions discussions modeling packages, modeling, machine learning, please post RStudio Community. think encountered bug, please submit issue. Either way, learn create share reprex (minimal, reproducible example), clearly communicate code.","code":""},{"path":"https://vetiver.tidymodels.org/reference/api_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the OpenAPI specification from model metadata — api_spec","title":"Update the OpenAPI specification from model metadata — api_spec","text":"Update OpenAPI specification model metadata","code":""},{"path":"https://vetiver.tidymodels.org/reference/api_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Update the OpenAPI specification from model metadata — api_spec","text":"","code":"api_spec(spec, vetiver_model, path)  glue_spec_summary(ptype)  # S3 method for default glue_spec_summary(ptype)  # S3 method for data.frame glue_spec_summary(ptype)  # S3 method for array glue_spec_summary(ptype)"},{"path":"https://vetiver.tidymodels.org/reference/api_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the OpenAPI specification from model metadata — api_spec","text":"spec OpenAPI Specification formatted list object vetiver_model deployable vetiver_model() object path endpoint path ptype input data prototype model","code":""},{"path":"https://vetiver.tidymodels.org/reference/api_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the OpenAPI specification from model metadata — api_spec","text":"api_spec() returns updated OpenAPI Specification object. function uses glue_spec_summary() internally, returns gluecharacter string.","code":""},{"path":"https://vetiver.tidymodels.org/reference/attach_pkgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Fully attach or load packages for making model predictions — attach_pkgs","title":"Fully attach or load packages for making model predictions — attach_pkgs","text":"developer-facing functions, useful supporting new model types. models require one R packages fully attached make predictions, require namespace one R packages loaded.","code":""},{"path":"https://vetiver.tidymodels.org/reference/attach_pkgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Fully attach or load packages for making model predictions — attach_pkgs","text":"","code":"attach_pkgs(pkgs)  load_pkgs(pkgs)"},{"path":"https://vetiver.tidymodels.org/reference/attach_pkgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fully attach or load packages for making model predictions — attach_pkgs","text":"pkgs character vector package names load fully attach.","code":""},{"path":"https://vetiver.tidymodels.org/reference/attach_pkgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fully attach or load packages for making model predictions — attach_pkgs","text":"invisible TRUE.","code":""},{"path":"https://vetiver.tidymodels.org/reference/attach_pkgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fully attach or load packages for making model predictions — attach_pkgs","text":"two functions attempt either : fully attach load namespace pkgs vector package names, preserving current random seed. learn load vs. attach, read NAMESPACE chapter R Packages. deploying model, likely safer fully attach needed packages comes risk naming conflicts packages.","code":""},{"path":"https://vetiver.tidymodels.org/reference/handler_startup.html","id":null,"dir":"Reference","previous_headings":"","what":"Model handler functions for API endpoint — handler_startup","title":"Model handler functions for API endpoint — handler_startup","text":"developer-facing functions, useful supporting new model types. model supported vetiver_model() uses two handler functions vetiver_pr_predict(): handler_startup function executes API starts. Use function tasks like loading packages. model can use default method , NULL (nothing startup). handler_predict function executes API call. Use function calling predict() tasks must executed API call.","code":""},{"path":"https://vetiver.tidymodels.org/reference/handler_startup.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Model handler functions for API endpoint — handler_startup","text":"","code":"handler_startup(vetiver_model)  # S3 method for default handler_startup(vetiver_model)  handler_predict(vetiver_model, ...)  # S3 method for default handler_predict(vetiver_model, ...)  # S3 method for lm handler_predict(vetiver_model, ...)  # S3 method for Learner handler_startup(vetiver_model)  # S3 method for Learner handler_predict(vetiver_model, ...)  # S3 method for workflow handler_startup(vetiver_model)  # S3 method for workflow handler_predict(vetiver_model, ...)  # S3 method for xgb.Booster handler_startup(vetiver_model)  # S3 method for xgb.Booster handler_predict(vetiver_model, ...)"},{"path":"https://vetiver.tidymodels.org/reference/handler_startup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model handler functions for API endpoint — handler_startup","text":"vetiver_model deployable vetiver_model() object ... arguments passed predict(), prediction type","code":""},{"path":"https://vetiver.tidymodels.org/reference/handler_startup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model handler functions for API endpoint — handler_startup","text":"handler_startup function return invisibly, handler_predict function return function signature function(req). request body (req$body) consists new data prediction time; function return predictions either tibble list coercable tibble via tibble::as_tibble().","code":""},{"path":"https://vetiver.tidymodels.org/reference/handler_startup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model handler functions for API endpoint — handler_startup","text":"two generics use class vetiver_model$model dispatch.","code":""},{"path":"https://vetiver.tidymodels.org/reference/map_request_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify data types for each column in an input data prototype — map_request_body","title":"Identify data types for each column in an input data prototype — map_request_body","text":"OpenAPI specification Plumber API created via plumber::pr() can modified via plumber::pr_set_api_spec(), helper function identify data types predictors create list use specification. R data types, instead basic JSON data types. example, factors R documented strings OpenAPI specification.","code":""},{"path":"https://vetiver.tidymodels.org/reference/map_request_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Identify data types for each column in an input data prototype — map_request_body","text":"","code":"map_request_body(ptype)"},{"path":"https://vetiver.tidymodels.org/reference/map_request_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify data types for each column in an input data prototype — map_request_body","text":"ptype input data prototype model","code":""},{"path":"https://vetiver.tidymodels.org/reference/map_request_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify data types for each column in an input data prototype — map_request_body","text":"list used within plumber::pr_set_api_spec()","code":""},{"path":"https://vetiver.tidymodels.org/reference/map_request_body.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify data types for each column in an input data prototype — map_request_body","text":"developer-facing function, useful supporting new model types. called api_spec().","code":""},{"path":"https://vetiver.tidymodels.org/reference/predict.vetiver_endpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Post new data to a deployed model API endpoint and return predictions — predict.vetiver_endpoint","title":"Post new data to a deployed model API endpoint and return predictions — predict.vetiver_endpoint","text":"Post new data deployed model API endpoint return predictions","code":""},{"path":"https://vetiver.tidymodels.org/reference/predict.vetiver_endpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Post new data to a deployed model API endpoint and return predictions — predict.vetiver_endpoint","text":"","code":"# S3 method for vetiver_endpoint predict(object, new_data, ...)"},{"path":"https://vetiver.tidymodels.org/reference/predict.vetiver_endpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post new data to a deployed model API endpoint and return predictions — predict.vetiver_endpoint","text":"object model API endpoint object created vetiver_endpoint(). new_data New data making predictions, data frame. ... Extra arguments passed httr::POST()","code":""},{"path":"https://vetiver.tidymodels.org/reference/predict.vetiver_endpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post new data to a deployed model API endpoint and return predictions — predict.vetiver_endpoint","text":"tibble model predictions many rows new_data.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vetiver: Version, Share, Deploy, and Monitor Models — vetiver-package","title":"vetiver: Version, Share, Deploy, and Monitor Models — vetiver-package","text":"goal 'vetiver' provide fluent tooling version, share, deploy, monitor trained model. Functions handle recording checking model's input data prototype, predicting remote API endpoint. 'vetiver' package extensible, generics can support many kinds models.","code":""},{"path":[]},{"path":"https://vetiver.tidymodels.org/reference/vetiver-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vetiver: Version, Share, Deploy, and Monitor Models — vetiver-package","text":"Maintainer: Julia Silge julia.silge@rstudio.com (ORCID) contributors: RStudio [copyright holder, funder]","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Model constructor methods — vetiver_create_description.lm","title":"Model constructor methods — vetiver_create_description.lm","text":"developer-facing functions, useful supporting new model types. model supported vetiver_model() uses four methods deployable object created: vetiver_create_description() function generates helpful description model based characteristics. method required. vetiver_create_meta() function creates correct vetiver_meta() model. especially helpful specifying packages needed prediction. model can use default method , special metadata. vetiver_ptype() function finds input data prototype training data (zero-row slice) use checking prediction time. method required. vetiver_prepare_model() function executes last. Use function tasks like checking model trained reducing size model via butcher::butcher(). model can use default method , return model without changes.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Model constructor methods — vetiver_create_description.lm","text":"","code":"# S3 method for lm vetiver_create_description(model)  # S3 method for lm vetiver_prepare_model(model)  # S3 method for Learner vetiver_create_description(model)  # S3 method for Learner vetiver_prepare_model(model)  vetiver_create_description(model)  # S3 method for default vetiver_create_description(model)  vetiver_prepare_model(model)  # S3 method for default vetiver_prepare_model(model)  # S3 method for workflow vetiver_create_description(model)  # S3 method for workflow vetiver_prepare_model(model)  # S3 method for xgb.Booster vetiver_create_description(model)"},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model constructor methods — vetiver_create_description.lm","text":"model trained model, lm() model tidymodels workflows::workflow().","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_description.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model constructor methods — vetiver_create_description.lm","text":"four generics use class model dispatch.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata constructors for vetiver_model() object — vetiver_meta","title":"Metadata constructors for vetiver_model() object — vetiver_meta","text":"developer-facing functions, useful supporting new model types. metadata stored vetiver_model() object four elements: $user, metadata supplied user $version, version pin (can NULL pinning) $url, URL pin located, $required_pkgs, character string R packages required prediction","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata constructors for vetiver_model() object — vetiver_meta","text":"","code":"vetiver_meta(user = list(), version = NULL, url = NULL, required_pkgs = NULL)  vetiver_create_meta(model, metadata)  # S3 method for default vetiver_create_meta(model, metadata)  # S3 method for Learner vetiver_create_meta(model, metadata)  # S3 method for workflow vetiver_create_meta(model, metadata)  # S3 method for xgb.Booster vetiver_create_meta(model, metadata)"},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metadata constructors for vetiver_model() object — vetiver_meta","text":"user Metadata supplied user version Version pin url URL pin, required_pkgs Character string R packages required prediction model trained model, lm() model tidymodels workflows::workflow(). metadata list containing additional metadata store pin. retrieving pin, stored user key, avoid potential clashes metadata pins uses.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metadata constructors for vetiver_model() object — vetiver_meta","text":"vetiver_meta() constructor returns list. vetiver_create_meta function returns vetiver_meta() list.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_ptype.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vetiver input data prototype — vetiver_ptype.lm","title":"Create a vetiver input data prototype — vetiver_ptype.lm","text":"Optionally find return input data prototype model.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_ptype.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vetiver input data prototype — vetiver_ptype.lm","text":"","code":"# S3 method for lm vetiver_ptype(model, ...)  # S3 method for Learner vetiver_ptype(model, ...)  vetiver_ptype(model, ...)  # S3 method for default vetiver_ptype(model, ...)  vetiver_create_ptype(model, save_ptype, ...)  # S3 method for workflow vetiver_ptype(model, ...)  # S3 method for xgb.Booster vetiver_ptype(model, ...)"},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_ptype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vetiver input data prototype — vetiver_ptype.lm","text":"model trained model, lm() model tidymodels workflows::workflow(). ... method-specific arguments passed vetiver_ptype() compute input data prototype. save_ptype input data prototype stored model? options TRUE (default, stores zero-row slice training data), FALSE (input data prototype checking), dataframe used checking prediction time examples API visual documentation.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_ptype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vetiver input data prototype — vetiver_ptype.lm","text":"vetiver_ptype method returns zero-row dataframe, vetiver_create_ptype() returns either zero-row dataframe, NULL, dataframe passed save_ptype.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_create_ptype.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a vetiver input data prototype — vetiver_ptype.lm","text":"developer-facing functions, useful supporting new model types. vetiver_model() object optionally stores input data prototype checking prediction time. default save_ptype, TRUE, finds input data prototype (zero-row slice training data) via vetiver_ptype(). save_ptype = FALSE opts storing input data prototype. may pass data save_ptype, sure check structure training data, perhaps hardhat::scream().","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_endpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a model API endpoint object for prediction — vetiver_endpoint","title":"Create a model API endpoint object for prediction — vetiver_endpoint","text":"Create model API endpoint object prediction","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_endpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Create a model API endpoint object for prediction — vetiver_endpoint","text":"","code":"vetiver_endpoint(url)"},{"path":"https://vetiver.tidymodels.org/reference/vetiver_endpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a model API endpoint object for prediction — vetiver_endpoint","text":"url API endpoint URL","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_endpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a model API endpoint object for prediction — vetiver_endpoint","text":"new vetiver_endpoint object","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vetiver object for deployment of a trained model — vetiver_model","title":"Create a vetiver object for deployment of a trained model — vetiver_model","text":"vetiver_model() object collects information needed store, version, deploy trained model. vetiver_model() object created, can: store version pin vetiver_pin_write() create API endpoint vetiver_pr_predict()","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vetiver object for deployment of a trained model — vetiver_model","text":"","code":"vetiver_model(   model,   model_name,   ...,   description = NULL,   metadata = list(),   save_ptype = TRUE,   versioned = NULL )  new_vetiver_model(model, model_name, description, metadata, ptype, versioned)"},{"path":"https://vetiver.tidymodels.org/reference/vetiver_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vetiver object for deployment of a trained model — vetiver_model","text":"model trained model, lm() model tidymodels workflows::workflow(). model_name Model name ID. ... method-specific arguments passed vetiver_ptype() compute input data prototype. description detailed description model. omitted, brief description model generated. metadata list containing additional metadata store pin. retrieving pin, stored user key, avoid potential clashes metadata pins uses. save_ptype input data prototype stored model? options TRUE (default, stores zero-row slice training data), FALSE (input data prototype checking), dataframe used checking prediction time examples API visual documentation. versioned model object versioned stored vetiver_pin_write()? default, NULL, use default board store model. ptype input data prototype. NULL, checking new data prediction time.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vetiver object for deployment of a trained model — vetiver_model","text":"new vetiver_model object.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a vetiver object for deployment of a trained model — vetiver_model","text":"can provide data save_ptype use examples visual documentation created vetiver_pr_predict(). , consider checking input data prototype structure training data (perhaps hardhat::scream()) /simulating data avoid leaking PII via deployed model.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_pin_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write a trained model to a board of models — vetiver_pin_write","title":"Read and write a trained model to a board of models — vetiver_pin_write","text":"Use vetiver_pin_write() pin trained model board models, along input prototype new data model metadata. Use vetiver_pin_read() retrieve pinned object.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_pin_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write a trained model to a board of models — vetiver_pin_write","text":"","code":"vetiver_pin_write(board, vetiver_model)  vetiver_pin_read(board, name, version = NULL)"},{"path":"https://vetiver.tidymodels.org/reference/vetiver_pin_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write a trained model to a board of models — vetiver_pin_write","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function. vetiver_model deployable vetiver_model() object name Pin name. version Retrieve specific version pin. Use pin_versions() find versions available created.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_pin_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write a trained model to a board of models — vetiver_pin_write","text":"vetiver_pin_read() returns vetiver_model(); vetiver_pin_write()returns name new pin, invisibly.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_pin_write.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and write a trained model to a board of models — vetiver_pin_write","text":"functions read write vetiver_model() pin specified board containing model object elements needed prediction, model's input data prototype packages needed prediction time. may use pins::pin_read() pins::pin_meta() handle pin, vetiver_pin_read() returns vetiver_model() object ready deployment.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_pr_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Plumber API to predict with a deployable vetiver_model() object — vetiver_pr_predict","title":"Create a Plumber API to predict with a deployable vetiver_model() object — vetiver_pr_predict","text":"Use vetiver_pr_predict() add POST endpoint predictions trained, pinned vetiver_model() Plumber router.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_pr_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Plumber API to predict with a deployable vetiver_model() object — vetiver_pr_predict","text":"","code":"vetiver_pr_predict(   pr,   vetiver_model,   path = \"/predict\",   debug = is_interactive(),   ... )"},{"path":"https://vetiver.tidymodels.org/reference/vetiver_pr_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Plumber API to predict with a deployable vetiver_model() object — vetiver_pr_predict","text":"pr Plumber router, plumber::pr(). vetiver_model deployable vetiver_model() object path endpoint path debug TRUE provides insight API errors. ... arguments passed predict(), prediction type","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_pr_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Plumber API to predict with a deployable vetiver_model() object — vetiver_pr_predict","text":"Plumber router prediction endpoint added.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_pr_predict.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Plumber API to predict with a deployable vetiver_model() object — vetiver_pr_predict","text":"First store version vetiver_model() vetiver_pin_write(), create API endpoint vetiver_pr_predict(). Setting debug = TRUE may expose sensitive data model API errors.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_type_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert new data at prediction time using input data prototype — vetiver_type_convert","title":"Convert new data at prediction time using input data prototype — vetiver_type_convert","text":"developer-facing function, useful supporting new model types. prediction time, new observations typically must checked sometimes converted data types training time.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_type_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Convert new data at prediction time using input data prototype — vetiver_type_convert","text":"","code":"vetiver_type_convert(new_data, ptype)"},{"path":"https://vetiver.tidymodels.org/reference/vetiver_type_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert new data at prediction time using input data prototype — vetiver_type_convert","text":"new_data New data making predictions, data frame. ptype input data prototype, 0-row slice training data","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_type_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert new data at prediction time using input data prototype — vetiver_type_convert","text":"converted dataframe","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_write_plumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a deployable Plumber file for a vetiver model — vetiver_write_plumber","title":"Write a deployable Plumber file for a vetiver model — vetiver_write_plumber","text":"Use vetiver_write_plumber() create plumber.R file vetiver_model() versioned stored via vetiver_pin_write().","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_write_plumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Usage","title":"Write a deployable Plumber file for a vetiver model — vetiver_write_plumber","text":"","code":"vetiver_write_plumber(board, name, version = NULL, ..., file = \"plumber.R\")"},{"path":"https://vetiver.tidymodels.org/reference/vetiver_write_plumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a deployable Plumber file for a vetiver model — vetiver_write_plumber","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function. name Pin name. version Retrieve specific version pin. Use pin_versions() find versions available created. ... arguments passed vetiver_pr_predict() endpoint path prediction type. file path write Plumber file. Defaults plumber.R working directory. See plumber::plumb() naming precedence rules.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_write_plumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a deployable Plumber file for a vetiver model — vetiver_write_plumber","text":"content plumber.R file, invisibly.","code":""},{"path":"https://vetiver.tidymodels.org/reference/vetiver_write_plumber.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a deployable Plumber file for a vetiver model — vetiver_write_plumber","text":"default, function find use latest version vetiver model; model API (deployed) linked specific version. can override default behavior choosing specific version.","code":""},{"path":"https://vetiver.tidymodels.org/news/index.html","id":"vetiver-development-version","dir":"Changelog","previous_headings":"","what":"vetiver (development version)","title":"vetiver (development version)","text":"Added support tidymodels (#51) mlr3 (#56).","code":""},{"path":"https://vetiver.tidymodels.org/news/index.html","id":"vetiver-010","dir":"Changelog","previous_headings":"","what":"vetiver 0.1.0","title":"vetiver 0.1.0","text":"CRAN release: 2021-11-02 Initial CRAN release package.","code":""}]
